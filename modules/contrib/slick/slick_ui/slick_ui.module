<?php

/**
 * @file
 * Provides Slick carousel configuration entity UI.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Url;

/**
 * Implements hook_entity_type_build().
 */
function slick_ui_entity_type_build(array &$entity_types) {
  /** @var $entity_types \Drupal\Core\Entity\EntityTypeInterface[] */
  $slick = $entity_types['slick'];
  $slick->setListBuilderClass('Drupal\slick_ui\Controller\SlickListBuilder');
  $slick->setFormClass('add', 'Drupal\slick_ui\Form\SlickForm');
  $slick->setFormClass('edit', 'Drupal\slick_ui\Form\SlickForm');
  $slick->setFormClass('delete', 'Drupal\slick_ui\Form\SlickDeleteForm');
  $slick->setFormClass('duplicate', 'Drupal\slick_ui\Form\SlickForm');

  $slick->set('admin_permission', 'administer slick');

  $slick->setLinkTemplate('add-form', '/admin/config/media/slick/add');
  $slick->setLinkTemplate('edit-form', '/admin/config/media/slick/{slick}');
  $slick->setLinkTemplate('delete-form', '/admin/config/media/slick/{slick}/delete');
  $slick->setLinkTemplate('duplicate-form', '/admin/config/media/slick/{slick}/duplicate');
  $slick->setLinkTemplate('collection', '/admin/config/media/slick');
}

/**
 * Implements hook_help().
 */
function slick_ui_help($route_name, RouteMatchInterface $route_match) {
  $path = drupal_get_path('module', 'slick');
  switch ($route_name) {
    case 'help.page.slick_ui':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t("The Slick carousel module is a field formatter to create slideshows/carousels. Also available as Views style plugin.") . '</p>';
      $output .= '<h3>' . t('Uses') . '</h3>';
      $output .= '<dl>';
      $output .= '<dt>' . t('Usage as a field formatter') . '</dt>';
      $output .= '<dd>' . t('At any fieldable entity, e.g. <a href=":content-type">Content types</a> -- click "Manage display". Under "Format" of the active view mode, choose "Slick carousel" or "Slick media" for any of the following supported fields: image, media entity.', [':content-type' => Url::fromRoute('entity.node_type.collection')->toString()]) . '</dd>';
      $output .= '<dd>' . t('Click the "Configure" icon to have some extra options. Read more each option for more info.') . '</dd>';
      $output .= '<dt>' . t('Usage as a Views style plugin') . '</dt>';
      $output .= '<dd>' . t('Create a new View at <a href=":list">Views list page</a>.', [':list' => Url::fromRoute('entity.view.collection', ['name' => 'views_ui'])->toString()]) . '</dd>';
      $output .= '<dd>' . t('Add a <strong>Slick carousel</strong> style if you are aggregating multiple entity instances.') . '</dd>';
      $output .= '<dd>' . t('Or add an <strong>Unformatted list</strong> if you are targetting a single entity with a supported multi-value field, such as Image, and make it formatted as Slick carousel. Make sure to check "Use field formatter" under "Style settings".') . '</dd>';
      $output .= '</dl>';
      $output .= '<p>' . t('See the <a href=":field">Field module help</a> and the <a href=":field_ui">Field UI help</a> pages for general information on fields and how to create and manage them. For more information, see the <a href=":readme" target="_blank">Slick readme module</a>.', [
        ':field' => Url::fromRoute('help.page', ['name' => 'field'])->toString(),
        ':field_ui' => Url::fromRoute('help.page', ['name' => 'field_ui'])->toString(),
        ':readme' => Url::fromUri('base:' . $path . '/README.txt')->toString(),
      ]) . '</p>';
      return $output;
  }
}
