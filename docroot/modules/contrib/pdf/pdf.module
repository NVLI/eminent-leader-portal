<?php

use Drupal\Core\Url;

/**
 * Implements hook_libraries_info().
 */
function pdf_libraries_info() {
  $libraries['pdf.js'] = array(
    'name' => 'pdf.js',
    'vendor url' => 'http://mozilla.github.io/pdf.js/',
    'download url' => 'http://mozilla.github.io/pdf.js/getting_started/#download',
    'version arguments' => array(
      'file' => 'build/pdf.js',
      'pattern' => '/ersion\s=\s\'(.*)\'/',
      'lines' => 32,
    ),
    'files' => array(
      'js' => array(
        'build/pdf.js',
        'build/pdf.worker.js',
      ),
    ),
      /*
    'variants' => array(
      'viewer' => array(
        'files' => array(
          'js' => array(
            'build/pdf.js',
            'web/viewer.js',
          ),
        ),
      ),
      //DEV.
      'textlayer' => array(
        'files' => array(
          'js' => array(
            'build/pdf.js',
            'web/pdf_find_bar.js',
            'web/pdf_find_controller.js',
            'web/ui_utils.js',
            'web/text_layer_builder.js',
          ),
        ),
      )
    ),
      */
  );
  return $libraries;
}
/**
 * Implements hook_requirements().
 */
function pdf_requirements($phase) {
    $requirements = array();
    $library = libraries_load('pdf.js');
    if ($library['installed']) {
      $description = t('@version', array('@version' => $library['version']));
    }
    else {
      $requirements['pdf']['severity'] = REQUIREMENT_ERROR;
      $description = t('Not available (Download from <a href=":url">http://mozilla.github.io/pdf.js</a>)', array(':url' => $library['download url']));
    }
    //$js = \Drupal::service('library.discovery')->getLibraryByName('pdf', 'mozilla.pdf.js');
    $requirements['pdf']['title'] = t('PDF.js');
    $requirements['pdf']['value'] = $description;
    return $requirements;
}
