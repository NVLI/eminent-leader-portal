<?php

use Drupal\Core\Url;
use Drupal\Core\Template\Attribute;
use Drupal\block\Entity\Block;
use Drupal\user\Entity;
use Drupal\Core\Link;

/**
 * Implements template_preprocess_field.
 */
function eminent_sardar_preprocess_field(&$variables, $hook) {
  $element = $variables['element'];
  if ($variables['field_name'] == "field_time_line_title") {
    $media_entity_id = $element['#object']->get('field_time_line_media_reference')->target_id;;
    $media_url = Url::fromRoute('entity.media.canonical', array('media' => $media_entity_id));
    $variables['media_url'] = $media_url;
  }
  $variables['exhibition_nav'] = views_embed_view('exhibition_navigation', 'block_1');
}

/**
 * Implements hook_theme_suggestions_alter.
 */

function eminent_sardar_theme_suggestions_alter(array &$suggestions, array $variables) {
  if (isset($variables['element']) && isset($variables['element']['#type']) && isset($variables['element']['#id'])) {
      $original_theme_hook = $variables['theme_hook_original'];
      $suggestions[] = $original_theme_hook . '__' . str_replace('-', '_', $variables['element']['#id']);
  }
  return $suggestions;
}

/**
 * Implements template_preprocess_views_view_unformatted.
 */
function eminent_sardar_preprocess_views_view_unformatted(&$variables) {
  $view = $variables['view'];
  foreach ($variables['rows'] as $row) {
   if (isset($row['content']['#node'])) {
    $node = $row['content']['#node'];
    $type = $node->getType();
    if ($type == "play_list") {
      $variables['play_list_row'][] = $row;
    }
    if ($type == "quote") {
      $variables['quote_row'][] = $row;
    }
    if ($type == "time_line_collection") {
      $variables['time_line_collection_row'][] = $row;
    }
   }
   else {
     $variables['media_row'][] = $row;
   }
 }
}

/**
* Implements hook_preprocess_node() for Media document templates.
*/
function eminent_sardar_preprocess_media(&$variables) {
  // Get the current user.
  $user = \Drupal::currentUser();

  // Fetch the media id.
  $media_id = $variables['elements']['#media']->id();

  // Check whether the user has permission to create Time Line Collection.
  if ($user->hasPermission('create time_line_collection content')) {

    // Generate the add link.
    $add_playlist_url = Url::fromRoute('eminent_admin.addPlaylistTimeline', ['media_id' => $media_id, 'group' => 'timeline']);

    // We will be displaying the link content in a popup.
    $add_playlist_url->setOptions([
      'attributes' => [
        'class' => ['use-ajax', 'button', 'button--small'],
        'data-dialog-type' => 'modal',
        'data-dialog-options' => '{"width": "30%"}',
      ],
    ]);

    $variables['addtotimeline'] =  array(
      '#type' => 'markup',
      '#markup' => Link::fromTextAndUrl(t('Add to timeline'), $add_playlist_url)->toString(),
      '#attached' => ['library' => ['core/drupal.dialog.ajax']],
      '#cache' => [
        'max-age' => 0,
      ],
    );
  }

    // Check whether the user has permission to create Time Line Collection.
  if ($user->hasPermission('create play_list content')) {

    // Generate the add link.
    $add_playlist_url = Url::fromRoute('eminent_admin.addPlaylistTimeline', ['media_id' => $media_id, 'group' => 'playlist']);

    // We will be displaying the link content in a popup.
    $add_playlist_url->setOptions([
      'attributes' => [
        'class' => ['use-ajax', 'button', 'button--small'],
        'data-dialog-type' => 'modal',
        'data-dialog-options' => '{"width": "30%"}',
      ],
    ]);

    $variables['addtoplaylist'] =  array(
      '#type' => 'markup',
      '#markup' => Link::fromTextAndUrl(t('Add to playlist'), $add_playlist_url)->toString(),
      '#attached' => ['library' => ['core/drupal.dialog.ajax']],
      '#cache' => [
        'max-age' => 0,
      ],
    );
  }
}




