<?php

use Drupal\Core\Url;
use Drupal\Core\Template\Attribute;
use Drupal\block\Entity\Block;
use Drupal\user\Entity;
use Drupal\Core\Link;

/**
 * Implements template_preprocess_field.
 */
function eminent_sardar_preprocess_field(&$variables, $hook) {
  $element = $variables['element'];
  if ($variables['field_name'] == "field_time_line_title") {
    $media_entity_id = $element['#object']->get('field_time_line_media_reference')->target_id;;
    $media_url = Url::fromRoute('entity.media.canonical', array('media' => $media_entity_id));
    $variables['media_url'] = $media_url;
  }
  $variables['exhibition_nav'] = views_embed_view('exhibition_navigation', 'block_1');
}

/**
 * Implements hook_theme_suggestions_alter.
 */

function eminent_sardar_theme_suggestions_alter(array &$suggestions, array $variables) {
  if (isset($variables['element']) && isset($variables['element']['#type']) && isset($variables['element']['#id'])) {
      $original_theme_hook = $variables['theme_hook_original'];
      $suggestions[] = $original_theme_hook . '__' . str_replace('-', '_', $variables['element']['#id']);
  }
  return $suggestions;
}

/**
 * Implements template_preprocess_views_view_unformatted.
 */
function eminent_sardar_preprocess_views_view_unformatted(&$variables) {
  $view = $variables['view'];
  $view_title = $view->storage->id();
  if ($view_title == "eminent_search") {
    $playlist_count = $timeline_count = $media_count = $quote_count = 0;
    $variables['play_list_count'] = $variables['quote_count'] = $variables['timeline_count'] = $variables['media_count']= 0;
    foreach ($variables['rows'] as $row) {
     if (isset($row['content']['#node'])) {
      $node = $row['content']['#node'];
      $type = $node->getType();
      if ($type == "play_list") {
        $playlist_count++;
        $variables['play_list_row'][] = $row;
        $variables['play_list_result'] = TRUE;
        $variables['play_list_count'] = $playlist_count;
      }
      if ($type == "quote") {
        $quote_count++;
        $variables['quote_row'][] = $row;
        $variables['quote_result'] = TRUE;
        $variables['quote_count'] = $quote_count;
      }
      if ($type == "time_line_collection") {
        $timeline_count++;
        $variables['time_line_collection_row'][] = $row;
        $variables['time_line_collection_result'] = TRUE;
        $variables['timeline_count'] = $timeline_count;
      }
     }
     else {
        $media_count++;
        $variables['media_row'][] = $row;
        $variables['media_result'] = TRUE;
        $variables['media_count'] = $media_count;
     }
    }
  }
  if ($view_title == "home_page_articles") {
    $rows = $variables['rows'];
    unset($variables['rows']);
    foreach ($rows as $row) {
      $node = $row['content']['#node'];
      $nid = $node->Id();
      // Generate id from title
      $id = $node->getTitle(). $node->Id();
      //Lower case everything
      $id = strtolower($id);
      //Make alphanumeric (removes all other characters)
      $id = preg_replace("/[^a-z0-9_\s-]/", "", $id);
      //Clean up multiple dashes or whitespaces
      $id = preg_replace("/[\s-]+/", " ", $id);
      //Convert whitespaces and underscore to dash
      $id = preg_replace("/[\s_]/", "-", $id);
      $tab_id = '#' . $id;
      $tabs[$nid]['title'] = $node->getTitle();
      $tabs[$nid]['id'] = $tab_id;
      $variables['tabid'][$nid] = $tab_id;
      $variables['rows'][$nid] = $row;
      $variables['rows'][$nid]['tab_id'] = $id;
    }
    $variables['tabs'] = $tabs;
  }
}

/**
* Implements hook_preprocess_node() for Media document templates.
*/
function eminent_sardar_preprocess_media(&$variables) {
  // Get the current user.
  $user = \Drupal::currentUser();

  // Fetch the media id.
  $media_id = $variables['elements']['#media']->id();
  $variables['media_id'] = $media_id;

  // Fetch the media type.
  $variables['media_type'] = $variables['elements']['#media']->bundle();

  // Check whether the user has permission to create Time Line Collection.
  if ($user->hasPermission('create time_line_collection content')) {

    // Generate the add link.
    $add_playlist_url = Url::fromRoute('eminent_admin.addPlaylistTimeline', ['media_id' => $media_id, 'group' => 'timeline']);

    // We will be displaying the link content in a popup.
    $add_playlist_url->setOptions([
      'attributes' => [
        'class' => ['use-ajax', 'button', 'button--small'],
        'data-dialog-type' => 'modal',
        'data-dialog-options' => '{"width": "30%"}',
      ],
    ]);

    $variables['addtotimeline'] =  array(
      '#type' => 'markup',
      '#markup' => Link::fromTextAndUrl(t('Add to timeline'), $add_playlist_url)->toString(),
      '#attached' => ['library' => ['core/drupal.dialog.ajax']],
      '#cache' => [
        'max-age' => 0,
      ],
    );
  }

    // Check whether the user has permission to create Time Line Collection.
  if ($user->hasPermission('create play_list content')) {

    // Generate the add link.
    $add_playlist_url = Url::fromRoute('eminent_admin.addPlaylistTimeline', ['media_id' => $media_id, 'group' => 'playlist']);

    // We will be displaying the link content in a popup.
    $add_playlist_url->setOptions([
      'attributes' => [
        'class' => ['use-ajax', 'button', 'button--small'],
        'data-dialog-type' => 'modal',
        'data-dialog-options' => '{"width": "30%"}',
      ],
    ]);

    $variables['addtoplaylist'] =  array(
      '#type' => 'markup',
      '#markup' => Link::fromTextAndUrl(t('Add to playlist'), $add_playlist_url)->toString(),
      '#attached' => ['library' => ['core/drupal.dialog.ajax']],
      '#cache' => [
        'max-age' => 0,
      ],
    );
  }
}

/**
* Implements contact form alter.
*/
function eminent_sardar_form_contact_message_feedback_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  $form['#prefix'] = '<div id="myform-ajax-wrapper">';
  $form['#suffix'] = '</div>';

  // Name
  $form['name']['#attributes']['placeholder'][] = $form['name']['#title'].'*';
  unset($form['name']['#title']);

  // Mail
  $form['mail']['#attributes']['placeholder'][] = $form['mail']['#title'].'*';
  unset($form['mail']['#title']);


  // Subject
  $form['subject']['widget'][0]['value']['#attributes']['placeholder'][] = $form['subject']['widget'][0]['#title'].'*';
  $form['subject']['widget'][0]['#title'] = '';
  unset($form['subject']['widget'][0]['value']['#title']);

  // Message
  $form['message']['widget'][0]['value']['#attributes']['placeholder'][] = $form['message']['widget'][0]['#title'].'*';
  $form['message']['widget'][0]['#title'] = '';
  unset($form['message']['widget'][0]['value']['#title']);

  // Submit
  $form['actions']['#prefix'] = '<div class="clearfix">';
  $form['actions']['#suffix'] = '</div>';
  $form['actions']['submit']['#attributes']['class'][] = 'btn';
  $form['actions']['submit']['#attributes']['class'][] = 'btn-success';
  $form['actions']['submit']['#attributes']['class'][] = 'pull-right';

  // Preview
  $form['actions']['#prefix'] = '<div class="clearfix">';
  $form['actions']['#suffix'] = '</div>';
  $form['actions']['preview']['#attributes']['class'][] = 'btn';
  $form['actions']['preview']['#attributes']['class'][] = 'btn-success';
  $form['actions']['preview']['#attributes']['class'][] = 'hidden';

}

/**
 * Implements hook_preprocess_page.
 */
function eminent_sardar_preprocess_page(&$variables) {
  $route_name = \Drupal::routeMatch()->getRouteName();
  // Display filters only in the search page.
  if ($route_name == "view.eminent_search.page_1") {
    $variables['show_filters'] = TRUE;
  }
  $uid = \Drupal::currentUser()->id();
  if ($uid == 0) {
    $variables['user_class'] = "anonymous";
  }
  else {
    $variables['user_class'] = "authenticated";
  }
}

/**
 * Implements hook_preprocess_page.
 */
function eminent_sardar_preprocess_paragraph(&$variables) {
  $paragraph = $variables['elements']['#paragraph'];
  $media_entity_id = $paragraph->get('field_time_line_media_reference')->target_id;;
  $media_url = Url::fromRoute('entity.media.canonical', array('media' => $media_entity_id));
  $variables['media_url'] = $media_url;
}
