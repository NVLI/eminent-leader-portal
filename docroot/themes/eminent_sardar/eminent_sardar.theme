<?php

use Drupal\Core\Url;
use Drupal\Core\Template\Attribute;
use Drupal\block\Entity\Block;
use Drupal\user\Entity;
use Drupal\Core\Link;
use Drupal\views\Views;
use Drupal\views\ViewEntityInterface;
use Drupal\Core\Render\Markup;
use Drupal\Component\Utility\Unicode;
use Drupal\file\Entity\File;
use Drupal\image\Entity\ImageStyle;

/**
 * Implements template_preprocess_field.
 */
function eminent_sardar_preprocess_field(&$variables, $hook) {
  $element = $variables['element'];
  if ($variables['field_name'] == "field_time_line_title") {
    $media_entity_id = $element['#object']->get('field_time_line_media_reference')->target_id;;
    $media_url = Url::fromRoute('entity.media.canonical', array('media' => $media_entity_id));
    $variables['media_url'] = $media_url;
  }
  $variables['exhibition_nav'] = views_embed_view('exhibition_navigation', 'block_1');
}

/**
 * Implements hook_theme_suggestions_alter.
 */

function eminent_sardar_theme_suggestions_alter(array &$suggestions, array $variables) {
  if (isset($variables['element']) && isset($variables['element']['#type']) && isset($variables['element']['#id'])) {
      $original_theme_hook = $variables['theme_hook_original'];
      $suggestions[] = $original_theme_hook . '__' . str_replace('-', '_', $variables['element']['#id']);
  }
  return $suggestions;
}

/**
 * Implements template_preprocess_views.
 */
function eminent_sardar_preprocess_views_view(&$variables) {
  $keyword = NULL;
  $view = $variables['view'];
  $view_title = $view->storage;
  $route_name = \Drupal::routeMatch()->getRouteName();
  if (isset($_GET['keyword'])) {
    $keyword = $variables['search_keyword'] = $_GET['keyword'];
  }

  $variables['exhibitions_url'] = Url::fromRoute('view.eminent_search.page_1', ['keyword' => $keyword]);
  $variables['timeline_url'] = Url::fromRoute('view.eminent_search.page_2', ['keyword' => $keyword]);
  $variables['media_url'] = Url::fromRoute('view.eminent_search.page_3', ['keyword' => $keyword]);
  $variables['quote_url'] = Url::fromRoute('view.eminent_search.page_4', ['keyword' => $keyword]);

  // Display filters only in the search page.
  if ($route_name == "view.eminent_search.page_1") {
    $variables['search_list_wrapper_class'] = 'exhibitions-wrapper';
  }
  if ($route_name == "view.eminent_search.page_2") {
    $variables['search_list_wrapper_class'] = 'timelines-wrapper';
  }
  if ($route_name == "view.eminent_search.page_3") {
    $variables['search_list_wrapper_class'] = 'media-wrapper';
  }
  if ($route_name == "view.eminent_search.page_4") {
    $variables['search_list_wrapper_class'] = 'quotes-wrapper';
  }
}

/**
* Implements hook_preprocess_node() for Media document templates.
*/
function eminent_sardar_preprocess_media(&$variables) {
  // Get the current user.
  $user = \Drupal::currentUser();


  // Fetch the media id.
  $media_id = $variables['elements']['#media']->id();
  $variables['media_id'] = $media_id;


  $media_url = Url::fromRoute('entity.media.canonical', array('media' => $media_id));
  $variables['media_url'] = $media_url;

  $message = \Drupal::entityManager()->getStorage('contact_message')
    ->create(array(
      'contact_form' => 'media_feedback',
    ));
  $form = \Drupal::getContainer()->get('entity.form_builder')->getForm($message);

  $variables['feedback_form'] = $form;

  if ($user->hasPermission('remove media from timeline')) {
    // Load the Media Referred Timeline View.
    $view = \Drupal\views\Views::getView('media_referred_timeline');

    // Set the display machine id.
    //$view->setDisplay('media_referred_timeline_block_1');

    // Get the title.
    $title = $view->getTitle();

    // Render.
    $render = $view->render();

    $the_title_render_array = [
      '#markup' => t('@title', ['@title'=> $title]),
      '#allowed_tags' => ['h2'],
    ];

    $variables['media_referred_timeline']['view_title'] = $the_title_render_array;
    // Or $variables['media_related_timeline']['view_title']['#prefix'] = $title;.
    $variables['media_referred_timeline']['view_output'] = $render;
  }
  if ($user->hasPermission('remove media from playlist')) {
    // Load the Media Referred Playlist View.
    $view = \Drupal\views\Views::getView('media_referred_playlist');

    // Set the display machine id.
    //$view->setDisplay('media_referred_timeline_block_1');

    // Get the title.
    $title = $view->getTitle();

    // Render.
    $render = $view->render();

    $the_title_render_array = [
      '#markup' => t('@title', ['@title'=> $title]),
      '#allowed_tags' => ['h2'],
    ];

    $variables['media_referred_playlist']['view_title'] = $the_title_render_array;
    // Or $variables['media_related_timeline']['view_title']['#prefix'] = $title;.
    $variables['media_referred_playlist']['view_output'] = $render;

  }

  // Fetch the media type.
  $variables['media_type'] = $variables['elements']['#media']->bundle();

  // Check whether the user has permission to create Time Line Collection.
  if ($user->hasPermission('create time_line_collection content')) {

    // Generate the add link.
    $add_playlist_url = Url::fromRoute('eminent_admin.addPlaylistTimeline', ['media_id' => $media_id, 'group' => 'timeline']);

    // We will be displaying the link content in a popup.
    $add_playlist_url->setOptions([
      'attributes' => [
        'class' => ['use-ajax', 'button', 'button--small', 'btn', 'btn-default'],
        'data-dialog-type' => 'modal',
        'data-dialog-options' => '{"width": "30%"}',
        'data-toggle' => "tooltip",
        'title' => "Add To Timeline",
      ],
    ]);

    $variables['addtotimeline'] =  array(
      '#type' => 'markup',
      '#markup' => Link::fromTextAndUrl(Markup::create('<i class="fa fa-flag" aria-hidden="true"></i>'), $add_playlist_url)->toString(),
      '#attached' => ['library' => ['core/drupal.dialog.ajax']],
      '#cache' => [
        'max-age' => 0,
      ],
    );
  }

    // Check whether the user has permission to create Time Line Collection.
  if ($user->hasPermission('create play_list content')) {

    // Generate the add link.
    $add_playlist_url = Url::fromRoute('eminent_admin.addPlaylistTimeline', ['media_id' => $media_id, 'group' => 'playlist']);

    // We will be displaying the link content in a popup.
    $add_playlist_url->setOptions([
      'attributes' => [
        'class' => ['use-ajax', 'button', 'button--small', 'btn', 'btn-default'],
        'data-dialog-type' => 'modal',
        'data-dialog-options' => '{"width": "30%"}',
        'data-toggle' => "tooltip",
        'title' => "Add To Playlist",
      ],
    ]);

    $variables['addtoplaylist'] =  array(
      '#type' => 'markup',
      '#markup' => Link::fromTextAndUrl(Markup::create('<i class="fa fa-list" aria-hidden="true"></i>'), $add_playlist_url)->toString(),
      '#attached' => ['library' => ['core/drupal.dialog.ajax']],
      '#cache' => [
        'max-age' => 0,
      ],
    );
  }

}
/**
* Implements feedback form alter.
*/
function eminent_sardar_form_contact_message_media_feedback_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  $media = \Drupal::request()->attributes->get('media');
  if (!empty($media)) {
    $current_media_id = $media->id();

    $media_url = Url::fromRoute('entity.media.canonical', array('media' => $current_media_id));

    $form['#prefix'] = '<div id="myform-ajax-wrapper">';
    $form['#suffix'] = '</div>';

    // Name
    $form['name']['#prefix'] = '<div class="col-sm-12"><div class="form-group">';
    $form['name']['#suffix'] = '</div></div>';
    $form['name']['#attributes']['class'][] = 'form-control';
    $form['name']['#attributes']['placeholder'][] = $form['name']['#title'].'*';
    $form['name']['#title_display'] = FALSE;

    // Mail
    $form['mail']['#prefix'] = '<div class="col-sm-12"><div class="form-group">';
    $form['mail']['#suffix'] = '</div></div>';
    $form['mail']['#attributes']['class'][] = 'form-control';
    $form['mail']['#attributes']['placeholder'][] = $form['mail']['#title'].'*';
    $form['mail']['#title_display'] = FALSE;

    // Subject
    $form['subject']['#prefix'] = '<div class="col-sm-12"><div class="form-group">';
    $form['subject']['#suffix'] = '</div></div>';
    $form['subject']['widget'][0]['value']['#attributes']['class'][] = 'form-control';
    $form['subject']['widget'][0]['value']['#attributes']['disabled'] = TRUE;
    $form['subject']['widget'][0]['value']['#default_value'] = t('Media Feedback for: @url', array('@url' => 'media/' . $current_media_id ));
    $form['subject']['widget'][0]['value']['#attributes']['placeholder'][] = $form['subject']['widget'][0]['#title'].'*';
    $form['subject']['widget'][0]['#title_display'] = FALSE;

    // Message
    $form['message']['#prefix'] = '<div class="col-sm-12"><div class="form-group">';
    $form['message']['#suffix'] = '</div></div>';
    $form['message']['widget'][0]['value']['#attributes']['class'][] = 'form-control';
    $form['message']['widget'][0]['value']['#attributes']['placeholder'][] = $form['message']['widget'][0]['#title'].'*';
    $form['message']['widget'][0]['#title'] = '';
    $form['message']['widget'][0]['value']['#title_display'] = FALSE;

    // Submit
    $form['actions']['#prefix'] = '<div class="col-sm-12"><div class="clearfix">';
    $form['actions']['#suffix'] = '</div></div>';
    $form['actions']['submit']['#attributes']['class'][] = 'btn';
    $form['actions']['submit']['#attributes']['class'][] = 'btn-success';
    $form['actions']['submit']['#attributes']['class'][] = 'pull-right';
    $form['actions']['submit']['#submit'][] = 'eminent_sardar_contact_submit';

    // Preview
    $form['actions']['#prefix'] = '<div class="clearfix">';
    $form['actions']['#suffix'] = '</div>';
    $form['actions']['preview']['#attributes']['class'][] = 'btn';
    $form['actions']['preview']['#attributes']['class'][] = 'btn-success';
    $form['actions']['preview']['#attributes']['class'][] = 'hidden';
  }
}

function eminent_sardar_contact_submit(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {

  $media = \Drupal::request()->attributes->get('media');
  if (!empty($media)) {
    $current_media_id = $media->id();

    $route_name = \Drupal::routeMatch()->getRouteName();

    $form_state->setRedirect($route_name, array('media' => $current_media_id));
  }

}
/**
* Implements contact form alter.
*/
function eminent_sardar_form_contact_message_feedback_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  $form['#prefix'] = '<div id="myform-ajax-wrapper">';
  $form['#suffix'] = '</div>';

  // Name
  $form['name']['#prefix'] = '<div class="col-sm-6">';
  $form['name']['#suffix'] = '</div>';
  $form['name']['#attributes']['placeholder'][] = $form['name']['#title'].'*';
  unset($form['name']['#title']);

  // Mail
  $form['mail']['#prefix'] = '<div class="col-sm-6">';
  $form['mail']['#suffix'] = '</div>';
  $form['mail']['#attributes']['placeholder'][] = $form['mail']['#title'].'*';
  unset($form['mail']['#title']);


  // Subject
  $form['subject']['#prefix'] = '<div class="col-sm-12">';
  $form['subject']['#suffix'] = '</div>';
  $form['subject']['widget'][0]['value']['#attributes']['placeholder'][] = $form['subject']['widget'][0]['#title'].'*';
  $form['subject']['widget'][0]['#title'] = '';
  unset($form['subject']['widget'][0]['value']['#title']);

  // Message
  $form['message']['#prefix'] = '<div class="col-sm-12">';
  $form['message']['#suffix'] = '</div>';
  $form['message']['widget'][0]['value']['#attributes']['placeholder'][] = $form['message']['widget'][0]['#title'].'*';
  $form['message']['widget'][0]['#title'] = '';
  unset($form['message']['widget'][0]['value']['#title']);

  // Submit
  $form['actions']['#prefix'] = '<div class="clearfix">';
  $form['actions']['#suffix'] = '</div>';
  $form['actions']['submit']['#attributes']['class'][] = 'btn';
  $form['actions']['submit']['#attributes']['class'][] = 'btn-success';
  $form['actions']['submit']['#attributes']['class'][] = 'pull-right';

  // Preview
  $form['actions']['#prefix'] = '<div class="clearfix">';
  $form['actions']['#suffix'] = '</div>';
  $form['actions']['preview']['#attributes']['class'][] = 'btn';
  $form['actions']['preview']['#attributes']['class'][] = 'btn-success';
  $form['actions']['preview']['#attributes']['class'][] = 'hidden';

}

/**
* Implements hook_form_alter.
*/
function eminent_sardar_views_exposed_form_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if (isset($_GET['keyword'])) {
    $form['keyword']['#default_value'] = $_GET['keyword'];
  }
}

/**
 * Implements hook_preprocess_page.
 */
function eminent_sardar_preprocess_page(&$variables) {

  //Get contact form as block.
  $message = \Drupal::entityManager()->getStorage('contact_message')
    ->create(array(
      'contact_form' => 'feedback',
    ));
  $form = \Drupal::getContainer()->get('entity.form_builder')->getForm($message);

  $variables['feedback'] = $form;

  $route_name = \Drupal::routeMatch()->getRouteName();
  // Display filters only in the search page.
  if ($route_name == "view.eminent_search.page_1" || $route_name == "view.eminent_search.page_2" || $route_name == "view.eminent_search.page_3" || $route_name == "view.eminent_search.page_4") {
    $variables['show_filters'] = TRUE;
  }
  $uid = \Drupal::currentUser()->id();
  if ($uid == 0) {
    $variables['user_class'] = "anonymous";
  }
  else {
    $variables['user_class'] = "authenticated";
  }
}

/**
 * Implements hook_preprocess_page.
 */
function eminent_sardar_preprocess_paragraph(&$variables) {
  $paragraph = $variables['elements']['#paragraph'];
  $media_entity_id = $paragraph->get('field_time_line_media_reference')->target_id;;
  $media_url = Url::fromRoute('entity.media.canonical', array('media' => $media_entity_id));
  $media_content = entity_load('media', $media_entity_id);
  $media_image_url = NULL;
  if ($media_content->bundle() == "image") {
    $image = $media_content->field_media_image->target_id;
    $file = File::load($image);
    if (!empty($file)) {
      $media_image_url = ImageStyle::load('timeline_image')->buildUrl($file->getFileUri());
    }
  }
  $variables['media_url'] = $media_url;
  $variables['media_image_url'] = $media_image_url;
}

/**
 * Implements template_preprocess_views_view_unformatted.
 */
function eminent_sardar_preprocess_views_view_unformatted(&$variables) {
  $view = $variables['view'];
  $view_title = $view->storage->id();
  if ($view_title == "home_page_articles") {
    $rows = $variables['rows'];
    unset($variables['rows']);
    foreach ($rows as $row) {
      $node = $row['content']['#node'];
      $nid = $node->Id();
      // Generate id from title
      $id = $node->getTitle(). $node->Id();
      //Lower case everything
      $id = strtolower($id);
      //Make alphanumeric (removes all other characters)
      $id = preg_replace("/[^a-z0-9_\s-]/", "", $id);
      //Clean up multiple dashes or whitespaces
      $id = preg_replace("/[\s-]+/", " ", $id);
      //Convert whitespaces and underscore to dash
      $id = preg_replace("/[\s_]/", "-", $id);
      $tab_id = '#' . $id;
      $tabs[$nid]['title'] = $node->getTitle();
      $tabs[$nid]['id'] = $tab_id;
      $variables['tabid'][$nid] = $tab_id;
      $variables['rows'][$nid] = $row;
      $variables['rows'][$nid]['tab_id'] = $id;
    }
    $variables['tabs'] = $tabs;
  }
}

/**
 * Implements template_preprocess_block.
 */
function eminent_sardar_preprocess_block(&$variables) {
  $variables['timelines_url'] = Url::fromRoute('view.time_line_collections.page_1');
}
